import re
from difflib import get_close_matches

def password_strength(password):
    # Initialize score
    score = 0
    feedback = []

    # Scoring based on length
    if len(password) > 15:
        score += 3
    elif 12 <= len(password) <= 15:
        score += 2
    else:
        score -= 2
        feedback.append("Increase the password length to at least 12 characters.")

    # Check for uppercase letters
    if re.search(r'[A-Z]', password):
        score += 2
    else:
        feedback.append("Add uppercase letters to strengthen the password.")

    # Check for lowercase letters
    if re.search(r'[a-z]', password):
        score += 2
    else:
        feedback.append("Add lowercase letters to strengthen the password.")

    # Check for numbers
    if re.search(r'[0-9]', password):
        score += 2
    else:
        feedback.append("Include numbers to make the password stronger.")

    # Check for special characters
    if re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        score += 3
    else:
        feedback.append("Use special characters (e.g., !, @, #) to enhance security.")

    # Check for common patterns or dictionary words
    common_patterns = ["1234", "password", "qwerty", "abcd", "letmein", "admin"]
    dictionary_words = ["love", "hello", "welcome", "secure", "login"]
    
    if any(pattern in password.lower() for pattern in common_patterns):
        score -= 5
        feedback.append("Avoid using common patterns like '1234' or 'password'.")
    elif get_close_matches(password.lower(), dictionary_words):
        score -= 5
        feedback.append("Avoid using dictionary words like 'love' or 'hello'.")

    # Determine strength level
    if score >= 8:
        strength = "Strong"
    elif 4 <= score < 8:
        strength = "Moderate"
    else:
        strength = "Weak"

    return strength, score, feedback

# Main function to interact with the user
def main():
    print("Welcome to the Password Strength Analyzer!")
    password = input("Enter a password to evaluate: ")
    strength, score, feedback = password_strength(password)

    print(f"\nPassword Strength: {strength}")
    print(f"Score: {score}/12")
    if feedback:
        print("\nSuggestions to improve your password:")
        for suggestion in feedback:
            print(f"- {suggestion}")

if __name__ == "__main__":
    main()
